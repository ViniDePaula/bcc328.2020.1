(* Test syntax analyser *)

module L = Lexing

let check str =
  let lexbuf = L.from_string str in
  try
    let ast = Parser.program Lexer.token lexbuf in
    let tree = Absyntree.flat_nodes (Absyntree.tree_of_lfuns ast) in
    let box = Tree.box_of_tree tree in
    Format.printf "%s\n\n%!" (Box.string_of_box box);
  with
  | Parser.Error ->
     Format.printf "%a error: syntax\n%!" Location.pp_position lexbuf.L.lex_curr_p
  | Error.Error (loc, msg) ->
     Format.printf "%a error: %s%!" Location.pp_location loc msg

let%expect_test _ =
  (* function declaration and constant expression *)
  check "int f(int x) = 100";
  [%expect{|
                 ╭───────╮
                 │FunList│
                 ╰────┬──╯
                   ╭──┴╮
                   │Fun│
                   ╰──┬╯
         ╭───────────┬┴───────────╮
    ╭────┴────╮  ╭───┴───╮  ╭─────┴────╮
    │    f    │  │Formals│  │IntExp 100│
    │Absyn.Int│  ╰───┬───╯  ╰──────────╯
    ╰─────────╯ ╭────┴────╮
                │    x    │
                │Absyn.Int│
                ╰─────────╯ |}];

  check "int f(int x, int y, bool z) = 100";
  [%expect{|
                              ╭───────╮
                              │FunList│
                              ╰───┬───╯
                                ╭─┴─╮
                                │Fun│
                                ╰─┬─╯
         ╭────────────────────────┴────────────────────────╮
    ╭────┴────╮              ╭────┴──╮               ╭─────┴────╮
    │    f    │              │Formals│               │IntExp 100│
    │Absyn.Int│              ╰────┬──╯               ╰──────────╯
    ╰─────────╯      ╭───────────┬┴───────────╮
                ╭────┴────╮ ╭────┴────╮ ╭─────┴────╮
                │    x    │ │    y    │ │    z     │
                │Absyn.Int│ │Absyn.Int│ │Absyn.Bool│
                ╰─────────╯ ╰─────────╯ ╰──────────╯ |}];

  check "int f() = 100";
  [%expect{| :1.7 error: syntax |}];

  check "foo f(int x) = 100";
  [%expect{| :1.3 error: syntax |}];

  (* binary operators *)
  check "bool f(int x) = 2 + 3 + 4 < 5 + 6";
  [%expect{|
                                       ╭───────╮
                                       │FunList│
                                       ╰───┬───╯
                                         ╭─┴─╮
                                         │Fun│
                                         ╰─┬─╯
          ╭───────────┬────────────────────┴────────────╮
    ╭─────┴────╮  ╭───┴───╮                        ╭────┴──╮
    │    f     │  │Formals│                        │OpExp <│
    │Absyn.Bool│  ╰───┬───╯                        ╰────┬──╯
    ╰──────────╯ ╭────┴────╮                 ╭──────────┴───────────────╮
                 │    x    │            ╭────┴──╮                   ╭───┴───╮
                 │Absyn.Int│            │OpExp +│                   │OpExp +│
                 ╰─────────╯            ╰────┬──╯                   ╰───┬───╯
                                       ╭─────┴──────────╮          ╭────┴─────╮
                                   ╭───┴───╮       ╭────┴───╮ ╭────┴───╮ ╭────┴───╮
                                   │OpExp +│       │IntExp 4│ │IntExp 5│ │IntExp 6│
                                   ╰───┬───╯       ╰────────╯ ╰────────╯ ╰────────╯
                                  ╭────┴─────╮
                             ╭────┴───╮ ╭────┴───╮
                             │IntExp 2│ │IntExp 3│
                             ╰────────╯ ╰────────╯ |}];

  check "bool f(int x) = 2 < 3 < 4";
  [%expect{| :1.23 error: syntax |}];

  check "int g(int x, bool y) = 6 < 7 + 1";
  [%expect{|
                                  ╭───────╮
                                  │FunList│
                                  ╰───┬───╯
                                    ╭─┴─╮
                                    │Fun│
                                    ╰─┬─╯
         ╭──────────────────┬─────────┴──────────────────╮
    ╭────┴────╮        ╭────┴──╮                    ╭────┴──╮
    │    g    │        │Formals│                    │OpExp <│
    │Absyn.Int│        ╰────┬──╯                    ╰────┬──╯
    ╰─────────╯      ╭──────┴─────╮           ╭──────────┴────╮
                ╭────┴────╮ ╭─────┴────╮ ╭────┴───╮       ╭───┴───╮
                │    x    │ │    y     │ │IntExp 6│       │OpExp +│
                │Absyn.Int│ │Absyn.Bool│ ╰────────╯       ╰───┬───╯
                ╰─────────╯ ╰──────────╯                 ╭────┴─────╮
                                                    ╭────┴───╮ ╭────┴───╮
                                                    │IntExp 7│ │IntExp 1│
                                                    ╰────────╯ ╰────────╯ |}];

  (*chamada de funções*)
  check "int a(int b, int c) = func(x, x < 1, func2(a))";
  [%expect{|
                                        ╭───────╮
                                        │FunList│
                                        ╰────┬──╯
                                          ╭──┴╮
                                          │Fun│
                                          ╰──┬╯
         ╭─────────────────┬─────────────────┴─────────────────╮
    ╭────┴────╮        ╭───┴───╮                        ╭──────┴─────╮
    │    a    │        │Formals│                        │FuncExp func│
    │Absyn.Int│        ╰───┬───╯                        ╰──────┬─────╯
    ╰─────────╯      ╭─────┴─────╮                        ╭────┴──╮
                ╭────┴────╮ ╭────┴────╮                   │ExpList│
                │    b    │ │    c    │                   ╰────┬──╯
                │Absyn.Int│ │Absyn.Int│     ╭───────────────┬──┴──────────────╮
                ╰─────────╯ ╰─────────╯ ╭───┴───╮      ╭────┴──╮       ╭──────┴──────╮
                                        │IdExp x│      │OpExp <│       │FuncExp func2│
                                        ╰───────╯      ╰────┬──╯       ╰──────┬──────╯
                                                      ╭─────┴────╮        ╭───┴───╮
                                                  ╭───┴───╮ ╭────┴───╮    │ExpList│
                                                  │IdExp x│ │IntExp 1│    ╰───┬───╯
                                                  ╰───────╯ ╰────────╯    ╭───┴───╮
                                                                          │IdExp a│
                                                                          ╰───────╯ |}];
  
  (*expressão condicional*)
  check "int a(int b, int c) = 
          if b < c then 
            b + c
          else
            c";
  [%expect {|
                                          ╭───────╮
                                          │FunList│
                                          ╰───┬───╯
                                            ╭─┴─╮
                                            │Fun│
                                            ╰─┬─╯
         ╭─────────────────┬──────────────────┴─────────────────╮
    ╭────┴────╮        ╭───┴───╮                              ╭─┴╮
    │    a    │        │Formals│                              │If│
    │Absyn.Int│        ╰───┬───╯                              ╰─┬╯
    ╰─────────╯      ╭─────┴─────╮               ╭──────────────┴────┬──────────────╮
                ╭────┴────╮ ╭────┴────╮      ╭───┴───╮           ╭───┴───╮      ╭───┴───╮
                │    b    │ │    c    │      │OpExp <│           │OpExp +│      │IdExp c│
                │Absyn.Int│ │Absyn.Int│      ╰───┬───╯           ╰───┬───╯      ╰───────╯
                ╰─────────╯ ╰─────────╯     ╭────┴────╮         ╭────┴────╮
                                        ╭───┴───╮ ╭───┴───╮ ╭───┴───╮ ╭───┴───╮
                                        │IdExp b│ │IdExp c│ │IdExp b│ │IdExp c│
                                        ╰───────╯ ╰───────╯ ╰───────╯ ╰───────╯ |}];


  (* expressão de declaração*)
  check "int a(int b, int c) = 
          let y = testVar 
          in 
            f(k(2), 2 + 2)";
  [%expect {|
                                            ╭───────╮
                                            │FunList│
                                            ╰────┬──╯
                                              ╭──┴╮
                                              │Fun│
                                              ╰──┬╯
         ╭─────────────────┬─────────────────────┴─────────────────╮
    ╭────┴────╮        ╭───┴───╮                             ╭─────┴───╮
    │    a    │        │Formals│                             │DeclExp y│
    │Absyn.Int│        ╰───┬───╯                             ╰─────┬───╯
    ╰─────────╯      ╭─────┴─────╮             ╭──────────┬────────┴─────────╮
                ╭────┴────╮ ╭────┴────╮ ╭──────┴──────╮ ╭─┴╮            ╭────┴────╮
                │    b    │ │    c    │ │IdExp testVar│ │in│            │FuncExp f│
                │Absyn.Int│ │Absyn.Int│ ╰─────────────╯ ╰──╯            ╰────┬────╯
                ╰─────────╯ ╰─────────╯                                  ╭───┴───╮
                                                                         │ExpList│
                                                                         ╰───┬───╯
                                                                  ╭──────────┴─────╮
                                                             ╭────┴────╮       ╭───┴───╮
                                                             │FuncExp k│       │OpExp +│
                                                             ╰────┬────╯       ╰───┬───╯
                                                             ╭────┴──╮        ╭────┴─────╮
                                                             │ExpList│   ╭────┴───╮ ╭────┴───╮
                                                             ╰────┬──╯   │IntExp 2│ │IntExp 2│
                                                             ╭────┴───╮  ╰────────╯ ╰────────╯
                                                             │IntExp 2│
                                                             ╰────────╯ |}];
  
  (*teste func exemplo*)
  check "int f(int a, bool b) = 
          let y = a + b 
          in 
            if a < b then
              f(sucessor(a), b) + y
            else 
              y + y";
  [%expect {|
                                                                     ╭───────╮
                                                                     │FunList│
                                                                     ╰────┬──╯
                                                                       ╭──┴╮
                                                                       │Fun│
                                                                       ╰──┬╯
         ╭──────────────────┬─────────────────────────────────────────────┴─────────────────╮
    ╭────┴────╮        ╭────┴──╮                                                       ╭────┴────╮
    │    f    │        │Formals│                                                       │DeclExp y│
    │Absyn.Int│        ╰────┬──╯                                                       ╰────┬────╯
    ╰─────────╯      ╭──────┴─────╮               ╭────────────┬────────────────────────────┴────────────╮
                ╭────┴────╮ ╭─────┴────╮      ╭───┴───╮      ╭─┴╮                                      ╭─┴╮
                │    a    │ │    b     │      │OpExp +│      │in│                                      │If│
                │Absyn.Int│ │Absyn.Bool│      ╰───┬───╯      ╰──╯                                      ╰─┬╯
                ╰─────────╯ ╰──────────╯     ╭────┴────╮                   ╭─────────────────────────────┴────────────────────────────╮
                                         ╭───┴───╮ ╭───┴───╮           ╭───┴───╮                    ╭────┴──╮                     ╭───┴───╮
                                         │IdExp a│ │IdExp b│           │OpExp <│                    │OpExp +│                     │OpExp +│
                                         ╰───────╯ ╰───────╯           ╰───┬───╯                    ╰────┬──╯                     ╰───┬───╯
                                                                      ╭────┴────╮                   ╭────┴─────────────╮         ╭────┴────╮
                                                                  ╭───┴───╮ ╭───┴───╮         ╭─────┴───╮          ╭───┴───╮ ╭───┴───╮ ╭───┴───╮
                                                                  │IdExp a│ │IdExp b│         │FuncExp f│          │IdExp y│ │IdExp y│ │IdExp y│
                                                                  ╰───────╯ ╰───────╯         ╰─────┬───╯          ╰───────╯ ╰───────╯ ╰───────╯
                                                                                               ╭────┴──╮
                                                                                               │ExpList│
                                                                                               ╰────┬──╯
                                                                                               ╭────┴────────╮
                                                                                      ╭────────┴───────╮ ╭───┴───╮
                                                                                      │FuncExp sucessor│ │IdExp b│
                                                                                      ╰────────┬───────╯ ╰───────╯
                                                                                          ╭───┴┴──╮
                                                                                          │ExpList│
                                                                                          ╰───┬───╯
                                                                                          ╭───┴───╮
                                                                                          │IdExp a│
                                                                                          ╰───────╯ |}];

  (*lista de func*)
  check "int f(int a, bool b) = 
          let y = a + b 
          in 
            if a < b then
              f(sucessor(a), b) + y
            else 
              y + y
        int sucessor(int n) = 
          n + 1
        int main(int x) =
          f(x, 10)";
  [%expect {|
                                                                                                                   ╭───────╮
                                                                                                                   │FunList│
                                                                                                                   ╰───┬───╯
                                                                          ╭────────────────────────────────────────────┴───────────────────────────────────────────────┬────────────────────────────────────────────╮
                                                                       ╭──┴╮                                                                                        ╭──┴╮                                         ╭─┴─╮
                                                                       │Fun│                                                                                        │Fun│                                         │Fun│
                                                                       ╰──┬╯                                                                                        ╰──┬╯                                         ╰─┬─╯
         ╭──────────────────┬─────────────────────────────────────────────┴─────────────────╮                                                         ╭───────────┬────┴───────────╮               ╭───────────┬────┴───────────╮
    ╭────┴────╮        ╭────┴──╮                                                       ╭────┴────╮                                               ╭────┴────╮  ╭───┴───╮       ╭────┴──╮       ╭────┴────╮  ╭───┴───╮       ╭────┴────╮
    │    f    │        │Formals│                                                       │DeclExp y│                                               │sucessor │  │Formals│       │OpExp +│       │  main   │  │Formals│       │FuncExp f│
    │Absyn.Int│        ╰────┬──╯                                                       ╰────┬────╯                                               │Absyn.Int│  ╰───┬───╯       ╰────┬──╯       │Absyn.Int│  ╰───┬───╯       ╰────┬────╯
    ╰─────────╯      ╭──────┴─────╮               ╭────────────┬────────────────────────────┴────────────╮                                       ╰─────────╯ ╭────┴────╮     ╭─────┴────╮     ╰─────────╯ ╭────┴────╮       ╭───┴───╮
                ╭────┴────╮ ╭─────┴────╮      ╭───┴───╮      ╭─┴╮                                      ╭─┴╮                                                  │    n    │ ╭───┴───╮ ╭────┴───╮             │    x    │       │ExpList│
                │    a    │ │    b     │      │OpExp +│      │in│                                      │If│                                                  │Absyn.Int│ │IdExp n│ │IntExp 1│             │Absyn.Int│       ╰───┬───╯
                │Absyn.Int│ │Absyn.Bool│      ╰───┬───╯      ╰──╯                                      ╰─┬╯                                                  ╰─────────╯ ╰───────╯ ╰────────╯             ╰─────────╯     ╭─────┴────╮
                ╰─────────╯ ╰──────────╯     ╭────┴────╮                   ╭─────────────────────────────┴────────────────────────────╮                                                                               ╭───┴───╮ ╭────┴────╮
                                         ╭───┴───╮ ╭───┴───╮           ╭───┴───╮                    ╭────┴──╮                     ╭───┴───╮                                                                           │IdExp x│ │IntExp 10│
                                         │IdExp a│ │IdExp b│           │OpExp <│                    │OpExp +│                     │OpExp +│                                                                           ╰───────╯ ╰─────────╯
                                         ╰───────╯ ╰───────╯           ╰───┬───╯                    ╰────┬──╯                     ╰───┬───╯
                                                                      ╭────┴────╮                   ╭────┴─────────────╮         ╭────┴────╮
                                                                  ╭───┴───╮ ╭───┴───╮         ╭─────┴───╮          ╭───┴───╮ ╭───┴───╮ ╭───┴───╮
                                                                  │IdExp a│ │IdExp b│         │FuncExp f│          │IdExp y│ │IdExp y│ │IdExp y│
                                                                  ╰───────╯ ╰───────╯         ╰─────┬───╯          ╰───────╯ ╰───────╯ ╰───────╯
                                                                                               ╭────┴──╮
                                                                                               │ExpList│
                                                                                               ╰────┬──╯
                                                                                               ╭────┴────────╮
                                                                                      ╭────────┴───────╮ ╭───┴───╮
                                                                                      │FuncExp sucessor│ │IdExp b│
                                                                                      ╰────────┬───────╯ ╰───────╯
                                                                                          ╭───┴┴──╮
                                                                                          │ExpList│
                                                                                          ╰───┬───╯
                                                                                          ╭───┴───╮
                                                                                          │IdExp a│
                                                                                          ╰───────╯ |}];

